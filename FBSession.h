/**
 * This header is generated by class-dump-z 0.2-0.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "FBLoginDialogDelegate.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class FBSessionAuthLogger, NSThread, NSMutableArray, NSArray, NSDate, FBSessionTokenCachingStrategy, FBSessionAppEventsState, FBLoginDialog, NSString, FBAccessTokenData;

@interface FBSession : XXUnknownSuperclass <FBLoginDialogDelegate> {
	NSString* _urlSchemeSuffix;
	BOOL _isInStateTransition;
	unsigned _loginTypeOfPendingOpenUrlCallback;
	unsigned _defaultDefaultAudience;
	unsigned _loginBehavior;
	NSMutableArray* _declinedPermissions;
	NSArray* _requestedReauthPermissions;
	BOOL _isRepairing;
	unsigned _state;
	NSString* _appID;
	FBAccessTokenData* _accessTokenData;
	NSArray* _initializedPermissions;
	unsigned _lastRequestedSystemAudience;
	FBSessionTokenCachingStrategy* _tokenCachingStrategy;
	NSDate* _attemptedRefreshDate;
	NSDate* _attemptedPermissionsRefreshDate;
	id _loginHandler;
	id _reauthorizeHandler;
	FBLoginDialog* _loginDialog;
	NSThread* _affinitizedThread;
	FBSessionAppEventsState* _appEventsState;
	FBSessionAuthLogger* _authLogger;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(retain) FBSessionAuthLogger* authLogger;
@property(retain) FBSessionAppEventsState* appEventsState;
@property(retain) NSThread* affinitizedThread;
@property(retain) FBLoginDialog* loginDialog;
@property(readonly, assign) NSString* appBaseUrl;
@property(copy) id reauthorizeHandler;
@property(copy) id loginHandler;
@property(copy) NSDate* attemptedPermissionsRefreshDate;
@property(copy) NSDate* attemptedRefreshDate;
@property(retain) FBSessionTokenCachingStrategy* tokenCachingStrategy;
@property(assign) BOOL isRepairing;
@property(assign) unsigned lastRequestedSystemAudience;
@property(copy) NSArray* initializedPermissions;
@property(readonly, copy) NSArray* declinedPermissions;
@property(copy) FBAccessTokenData* accessTokenData;
@property(readonly, assign) unsigned loginType;
@property(readonly, copy) NSArray* permissions;
@property(readonly, copy) NSDate* expirationDate;
@property(readonly, copy) NSString* accessToken;
@property(copy) NSString* urlSchemeSuffix;
@property(copy) NSString* appID;
@property(assign) unsigned state;
@property(readonly, assign) BOOL isOpen;
+(id)sdkSurfacedErrorForNativeLoginError:(id)nativeLoginError;
+(id)activeSessionIfOpen;
+(id)activeSessionIfExists;
+(BOOL)openActiveSessionWithPermissions:(id)permissions allowLoginUI:(BOOL)ui loginBehavior:(unsigned)behavior isRead:(BOOL)read defaultAudience:(unsigned)audience completionHandler:(id)handler;
+(BOOL)openActiveSessionWithPermissions:(id)permissions allowLoginUI:(BOOL)ui allowSystemAccount:(BOOL)account isRead:(BOOL)read defaultAudience:(unsigned)audience completionHandler:(id)handler;
+(BOOL)automaticallyNotifiesObserversForKey:(id)key;
+(void)renewSystemCredentials:(id)credentials;
+(id)defaultUrlSchemeSuffix;
+(void)setDefaultUrlSchemeSuffix:(id)suffix;
+(id)defaultAppID;
+(void)setDefaultAppID:(id)anId;
+(id)setActiveSession:(id)session userInfo:(id)info;
+(id)setActiveSession:(id)session;
+(id)activeSession;
+(BOOL)openActiveSessionWithPublishPermissions:(id)publishPermissions defaultAudience:(unsigned)audience allowLoginUI:(BOOL)ui completionHandler:(id)handler;
+(BOOL)openActiveSessionWithReadPermissions:(id)readPermissions allowLoginUI:(BOOL)ui completionHandler:(id)handler;
+(BOOL)openActiveSessionWithPermissions:(id)permissions loginBehavior:(unsigned)behavior isRead:(BOOL)read defaultAudience:(unsigned)audience completionHandler:(id)handler;
+(BOOL)openActiveSessionWithPermissions:(id)permissions allowLoginUI:(BOOL)ui defaultAudience:(unsigned)audience completionHandler:(id)handler;
+(BOOL)openActiveSessionWithPermissions:(id)permissions allowLoginUI:(BOOL)ui completionHandler:(id)handler;
+(BOOL)openActiveSessionWithAllowLoginUI:(BOOL)allowLoginUI;
-(void)closeAndClearTokenInformation:(id)information;
-(BOOL)openFromAccessTokenData:(id)accessTokenData completionHandler:(id)handler raiseExceptionIfInvalidState:(BOOL)state;
-(id)declinedPermissionsForRequestedPermissions:(id)requestedPermissions grantedPermissions:(id)permissions declinedPermissions:(id)permissions3;
-(id)jsonClientStateWithDictionary:(id)dictionary;
-(id)errorLoginFailedWithReason:(id)reason errorCode:(id)code innerError:(id)error localizedDescription:(id)description;
-(id)errorLoginFailedWithReason:(id)reason errorCode:(id)code innerError:(id)error;
-(void)callReauthorizeHandlerAndClearState:(id)state updateDeclinedPermissions:(BOOL)permissions;
-(void)transitionAndCallHandlerWithState:(unsigned)state error:(id)error tokenData:(id)data shouldCache:(BOOL)cache;
-(void)fbDialogNotLogin:(BOOL)login;
-(void)fbDialogLogin:(id)login expirationDate:(id)date params:(id)params;
-(void)checkThreadAffinity;
-(void)clearAffinitizedThread;
-(void)handleRefreshPermissions:(id)permissions;
-(BOOL)shouldRefreshPermissions;
-(BOOL)shouldExtendAccessToken;
-(void)refreshAccessToken:(id)token expirationDate:(id)date;
-(void)authorizeRequestWasImplicitlyCancelled;
-(void)completeReauthorizeWithAccessToken:(id)accessToken expirationDate:(id)date permissions:(id)permissions declinedPermissions:(id)permissions4;
-(void)repairWithHandler:(id)handler;
-(void)reauthorizeWithPermissions:(id)permissions isRead:(BOOL)read behavior:(unsigned)behavior defaultAudience:(unsigned)audience completionHandler:(id)handler;
-(void)validateReauthorizedAccessToken:(id)token expirationDate:(id)date;
-(BOOL)handleReauthorize:(id)reauthorize accessToken:(id)token;
-(BOOL)handleAuthorizationOpen:(id)open accessToken:(id)token loginType:(unsigned)type;
-(void)authorizeUsingLoginDialog:(id)dialog;
-(BOOL)tryOpenURL:(id)url;
-(BOOL)authorizeUsingSafari:(id)safari;
-(BOOL)authorizeUsingFacebookApplication:(id)application;
-(BOOL)isURLSchemeRegistered;
-(void)handleDidCompleteNativeLoginForAppCall:(id)handle;
-(id)getSystemAccountStoreAdapter;
-(void)authorizeUsingSystemAccountStore:(id)store defaultAudience:(unsigned)audience isReauthorize:(BOOL)reauthorize;
-(void)logIntegratedAuthAppEvent:(id)event permissions:(id)permissions;
-(void)setLoginTypeOfPendingOpenUrlCallback:(unsigned)pendingOpenUrlCallback;
-(void)retryableAuthorizeWithPermissions:(id)permissions defaultAudience:(unsigned)audience integratedAuth:(BOOL)auth FBAppAuth:(BOOL)auth4 safariAuth:(BOOL)auth5 fallback:(BOOL)fallback isReauthorize:(BOOL)reauthorize canFetchAppSettings:(BOOL)settings;
-(void)authorizeWithPermissions:(id)permissions defaultAudience:(unsigned)audience integratedAuth:(BOOL)auth FBAppAuth:(BOOL)auth4 safariAuth:(BOOL)auth5 fallback:(BOOL)fallback isReauthorize:(BOOL)reauthorize canFetchAppSettings:(BOOL)settings;
-(void)authorizeWithPermissions:(id)permissions behavior:(unsigned)behavior defaultAudience:(unsigned)audience isReauthorize:(BOOL)reauthorize;
-(BOOL)transitionToState:(unsigned)state withAccessTokenData:(id)accessTokenData shouldCache:(BOOL)cache;
-(BOOL)hasGranted:(id)granted;
-(void)setStateChangeHandler:(id)handler;
-(void)handleDidBecomeActive;
-(BOOL)openFromAccessTokenData:(id)accessTokenData completionHandler:(id)handler;
-(BOOL)handleOpenURL:(id)url;
-(BOOL)handleAuthorizationCallbacks:(id)callbacks params:(id)params loginType:(unsigned)type;
-(void)closeAndClearTokenInformation;
-(void)close;
-(void)refreshPermissionsWithCompletionHandler:(id)completionHandler;
-(void)requestNewPublishPermissions:(id)permissions defaultAudience:(unsigned)audience completionHandler:(id)handler;
-(void)requestNewReadPermissions:(id)permissions completionHandler:(id)handler;
-(void)reauthorizeWithPublishPermissions:(id)publishPermissions defaultAudience:(unsigned)audience completionHandler:(id)handler;
-(void)reauthorizeWithReadPermissions:(id)readPermissions completionHandler:(id)handler;
-(void)reauthorizeWithPermissions:(id)permissions behavior:(unsigned)behavior completionHandler:(id)handler;
-(void)openWithBehavior:(unsigned)behavior completionHandler:(id)handler;
-(void)openWithCompletionHandler:(id)completionHandler;
-(id)refreshDate;
-(void)dealloc;
-(BOOL)initializeFromCachedToken:(id)cachedToken withPermissions:(id)permissions;
-(id)initWithAppID:(id)appID permissions:(id)permissions defaultAudience:(unsigned)audience urlSchemeSuffix:(id)suffix tokenCacheStrategy:(id)strategy;
-(id)initWithAppID:(id)appID permissions:(id)permissions urlSchemeSuffix:(id)suffix tokenCacheStrategy:(id)strategy;
-(id)initWithPermissions:(id)permissions;
-(id)init;
@end

