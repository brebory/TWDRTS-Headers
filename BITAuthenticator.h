/**
 * This header is generated by class-dump-z 0.2-0.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "UIAlertViewDelegate.h"
#import "BITAuthenticationViewControllerDelegate.h"
#import "BITHockeyBaseManager.h"

@class BITHockeyAppClient, UIViewController, NSString, NSURL;
@protocol BITAuthenticatorDelegate;

@interface BITAuthenticator : BITHockeyBaseManager <BITAuthenticationViewControllerDelegate, UIAlertViewDelegate> {
	id _appDidBecomeActiveObserver;
	id _appDidEnterBackgroundOberser;
	UIViewController* _authenticationController;
	BOOL _isSetup;
	BOOL _restrictApplicationUsage;
	BOOL _identified;
	BOOL _validated;
	unsigned _identificationType;
	unsigned _restrictionEnforcementFrequency;
	NSString* _authenticationSecret;
	NSURL* _webpageURL;
	NSString* _urlScheme;
	id<BITAuthenticatorDelegate> _delegate;
	BITHockeyAppClient* _hockeyAppClient;
	id _identificationCompletion;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(copy, nonatomic) id identificationCompletion;
@property(readonly, copy, nonatomic) NSString* installationIdentifier;
@property(readonly, copy, nonatomic) NSString* installationIdentifierParameterString;
@property(copy, nonatomic) NSString* lastAuthenticatedVersion;
@property(retain, nonatomic) BITHockeyAppClient* hockeyAppClient;
@property(assign, nonatomic) __weak id<BITAuthenticatorDelegate> delegate;
@property(assign, nonatomic, getter=isValidated) BOOL validated;
@property(assign, nonatomic, getter=isIdentified) BOOL identified;
@property(retain, nonatomic) NSString* urlScheme;
@property(retain, nonatomic) NSURL* webpageURL;
@property(copy, nonatomic) NSString* authenticationSecret;
@property(assign, nonatomic) unsigned restrictionEnforcementFrequency;
@property(assign, nonatomic) BOOL restrictApplicationUsage;
@property(assign, nonatomic) unsigned identificationType;
+(id)stringForIdentificationType:(unsigned)identificationType;
+(void)email:(id*)email andIUID:(id*)iuid fromOpenURL:(id)openURL;
+(id)UDIDFromOpenURL:(id)openURL annotation:(id)annotation;
+(id)authenticationTokenFromURLResponse:(id)urlresponse data:(id)data error:(id*)error;
+(BOOL)isValidationResponseValid:(id)valid error:(id*)error;
-(void).cxx_destruct;
-(void)alertView:(id)view didDismissWithButtonIndex:(int)buttonIndex;
-(void)applicationDidEnterBackground:(id)application;
-(void)applicationDidBecomeActive:(id)application;
-(id)publicInstallationIdentifier;
-(void)storeInstallationIdentifier:(id)identifier withType:(unsigned)type;
-(void)unregisterObservers;
-(void)registerObservers;
-(void)processFullSizeImage;
-(void)cleanupInternalStorage;
-(BOOL)handleOpenURL:(id)url sourceApplication:(id)application annotation:(id)annotation;
-(void)authenticationViewControllerDidTapWebButton:(id)authenticationViewController;
-(id)deviceAuthenticationURL;
-(id)authenticationPath;
-(id)requestForAuthenticationEmail:(id)authenticationEmail password:(id)password;
-(void)authenticationViewController:(id)controller handleAuthenticationWithEmail:(id)email password:(id)password completion:(id)completion;
-(id)validationParameters;
-(void)validateWithCompletion:(id)completion;
-(void)validate;
-(void)identifyWithCompletion:(id)completion;
-(void)alertOnFailureStoringTokenInKeychain;
-(BOOL)needsValidation;
-(void)authenticate;
-(void)authenticateInstallation;
-(void)dismissAuthenticationControllerAnimated:(BOOL)animated completion:(id)completion;
-(void)startManager;
-(id)initWithAppIdentifier:(id)appIdentifier isAppStoreEnvironment:(BOOL)environment;
-(void)dealloc;
@end

