/**
 * This header is generated by class-dump-z 0.2-0.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "NSURLConnectionDataDelegate.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class WBFileStream, NSString, NSURLConnection, NSURL;

__attribute__((visibility("hidden")))
@interface WBDownloadOperation : XXUnknownSuperclass <NSURLConnectionDataDelegate> {
	BOOL _finished;
	BOOL _executing;
	BOOL _cancelled;
	BOOL _useTemporaryStorage;
	BOOL _allowsCellularAccess;
	BOOL _backgroundOperation;
	BOOL _inBackground;
	NSString* _uuid;
	NSURL* _url;
	NSURLConnection* _connection;
	WBFileStream* _fileStream;
	id _progressHandler;
	id _completionHandler;
	long long _totalContentLength;
	long long _currentContentLength;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(copy, nonatomic) id completionHandler;
@property(copy, nonatomic) id progressHandler;
@property(retain, nonatomic) WBFileStream* fileStream;
@property(assign, nonatomic) long long currentContentLength;
@property(assign, nonatomic) long long totalContentLength;
@property(retain, nonatomic) NSURLConnection* connection;
@property(assign, nonatomic) BOOL inBackground;
@property(assign, nonatomic) BOOL backgroundOperation;
@property(assign, nonatomic) BOOL allowsCellularAccess;
@property(assign, nonatomic) BOOL useTemporaryStorage;
@property(copy, nonatomic) NSURL* url;
@property(assign, getter=isFinished, setter=setFinished:) BOOL finished;
@property(assign, getter=isExecuting, setter=setExecuting:) BOOL executing;
@property(assign, getter=isCancelled, setter=setCancelled:) BOOL cancelled;
@property(readonly, assign, nonatomic) NSString* uuid;
-(void).cxx_destruct;
-(void)connection:(id)connection didFailWithError:(id)error;
-(void)connectionDidFinishLoading:(id)connection;
-(void)connection:(id)connection didReceiveData:(id)data;
-(void)connection:(id)connection didReceiveResponse:(id)response;
-(void)downloadContentAtUrl:(id)url useTemporaryStorage:(BOOL)storage;
-(void)resumeBackgroundOperation;
-(void)cancel;
-(void)start;
-(BOOL)isConcurrent;
-(BOOL)isReady;
-(void)_startDownload;
-(void)_prepareFileStreamForUrl:(id)url useTemporaryStorage:(BOOL)storage;
-(void)_onDownloadFinished:(id)finished error:(id)error;
-(void)_onProgressMade;
-(id)init;
@end

